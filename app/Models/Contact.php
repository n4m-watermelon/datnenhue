<?php

namespace App\Models;

use App\Http\Traits\BelongToCategoryTrait;
use App\Http\Traits\EditedByTrait;
use App\Http\Traits\GetEditedAtTrait;
use App\Http\Traits\GetImageTrait;
use App\Http\Traits\GetListTrait;
use App\Http\Traits\GetPathTrait;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Facades\Auth;
use Request;

class Contact extends BaseModel
{
    use BelongToCategoryTrait, GetPathTrait, GetListTrait, EditedByTrait, GetEditedAtTrait, GetImageTrait;
    /**
     * Fillable field
     *
     * @var mixed
     */
    protected $fillable = [
        'title',
        'title_alias',
        'image',
        'email',
        'public',
        'params',
        'category_id',
        'user_id',
        'created_by',
        'updated_by'
    ];

    /**
     * Contact::boot()
     *
     * @return void
     */
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        if (Request::segment(1) == 'admin') {
            // Add global scrope created_at
            static::addGlobalScope('updated_at', function (Builder $builder) {
                $builder->orderBy('updated_at', 'desc');
            });
            static::creating(function ($contact) {
                $contact->created_by = Auth::user()->getKey();
                $contact->updated_by = Auth::user()->getKey();
            });
            static::updating(function ($contact) {
                $contact->updated_by = Auth::user()->getKey();
            });
        }
    }

    /**
     * Contact::getParamsAttribute()
     *
     * @param mixed $value
     * @return object
     */
    public function getParamsAttribute($value)
    {
        return json_decode($value, false);
    }

    /**
     * Contact::setParamsAttribute()
     *
     * @param mixed $value
     * @return void
     */
    public function setParamsAttribute($value)
    {
        $this->attributes['params'] = json_encode($value, JSON_UNESCAPED_UNICODE);
    }
}
